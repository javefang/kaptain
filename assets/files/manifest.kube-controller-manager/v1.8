apiVersion: v1
kind: Pod
metadata:
  name: kube-controller-manager
  namespace: kube-system
  labels:
    k8s-app: kube-controller-manager
spec:
  hostNetwork: true
  containers:
  - name: kube-controller-manager
    image: {{ .Spec.DockerOpts.KubeImageProxy }}/google_containers/kube-controller-manager:{{ .Spec.KubeVersion }}
    command:
    - /usr/local/bin/kube-controller-manager
    - --address=0.0.0.0
    - --allocate-node-cidrs=true
    - --cluster-cidr={{ .Spec.PodCIDR }}
    - --cluster-name={{ .Name }}
    - --cluster-signing-cert-file=/var/lib/kubernetes/ca.pem
    - --cluster-signing-key-file=/var/lib/kubernetes/ca-key.pem
    - --cloud-provider={{ .Spec.CloudProvider }}
    {{if .Spec.CloudConfig -}}
    - --cloud-config={{ .Spec.CloudConfig }}
    {{end -}}
    - --configure-cloud-routes=false
    - --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig
    - --leader-elect=true
    - --root-ca-file=/var/lib/kubernetes/ca.pem
    - --service-account-private-key-file=/var/lib/kubernetes/ca-key.pem
    - --service-cluster-ip-range={{ .Spec.ServiceCIDR }}
    - --use-service-account-credentials
    - --v=2
    volumeMounts:
    - mountPath: /var/lib/kubernetes
      name: kube-master-data
      readOnly: true
    - mountPath: /etc/ssl/certs/ca-certificates.crt
      name: ca-bundle
      readOnly: true
  volumes:
  - name: kube-master-data
    hostPath:
      path: /var/lib/kubernetes
  - name: ca-bundle
    hostPath:
      path: /etc/ssl/certs/ca-certificates.crt
      type: File
